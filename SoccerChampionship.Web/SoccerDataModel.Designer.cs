//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("SoccerModel", "FK_CategoryID_Category", "Category", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SoccerChampionship.Web.Category), "Team", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SoccerChampionship.Web.Team), true)]
[assembly: EdmRelationshipAttribute("SoccerModel", "FK_CategoryID_Category_2", "Category", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SoccerChampionship.Web.Category), "Tournament", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SoccerChampionship.Web.Tournament), true)]
[assembly: EdmRelationshipAttribute("SoccerModel", "FK_GameID_Game", "Game", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SoccerChampionship.Web.Game), "GamePayments", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SoccerChampionship.Web.GamePayment), true)]
[assembly: EdmRelationshipAttribute("SoccerModel", "FK_IDGameDay_GameDay", "GameDay", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SoccerChampionship.Web.GameDay), "Game", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SoccerChampionship.Web.Game), true)]
[assembly: EdmRelationshipAttribute("SoccerModel", "FK_Team1_Team", "Team", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SoccerChampionship.Web.Team), "Game", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SoccerChampionship.Web.Game), true)]
[assembly: EdmRelationshipAttribute("SoccerModel", "FK_Team2_Team", "Team", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SoccerChampionship.Web.Team), "Game", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SoccerChampionship.Web.Game), true)]
[assembly: EdmRelationshipAttribute("SoccerModel", "FK_GameDayID_GameDay", "GameDay", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SoccerChampionship.Web.GameDay), "PlayerStatics", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SoccerChampionship.Web.PlayerStatic), true)]
[assembly: EdmRelationshipAttribute("SoccerModel", "FK_IDTournament_Tournament", "Tournament", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SoccerChampionship.Web.Tournament), "GameDay", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SoccerChampionship.Web.GameDay), true)]
[assembly: EdmRelationshipAttribute("SoccerModel", "FK_TeamID_Team_3", "Team", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SoccerChampionship.Web.Team), "GamePayments", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SoccerChampionship.Web.GamePayment), true)]
[assembly: EdmRelationshipAttribute("SoccerModel", "FK_PlayerID_Player", "Player", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SoccerChampionship.Web.Player), "PlayerStatics", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SoccerChampionship.Web.PlayerStatic), true)]
[assembly: EdmRelationshipAttribute("SoccerModel", "FK_TeamID_Team", "Team", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SoccerChampionship.Web.Team), "Player", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SoccerChampionship.Web.Player), true)]
[assembly: EdmRelationshipAttribute("SoccerModel", "FK_TeamID_Team_2", "Team", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SoccerChampionship.Web.Team), "RegistrationPayments", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SoccerChampionship.Web.RegistrationPayment), true)]
[assembly: EdmRelationshipAttribute("SoccerModel", "FK_TournamentID_Tournament", "Tournament", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SoccerChampionship.Web.Tournament), "RegistrationPayments", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SoccerChampionship.Web.RegistrationPayment), true)]

#endregion

namespace SoccerChampionship.Web
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class SoccerEntities2 : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new SoccerEntities2 object using the connection string found in the 'SoccerEntities2' section of the application configuration file.
        /// </summary>
        public SoccerEntities2() : base("name=SoccerEntities2", "SoccerEntities2")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SoccerEntities2 object.
        /// </summary>
        public SoccerEntities2(string connectionString) : base(connectionString, "SoccerEntities2")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SoccerEntities2 object.
        /// </summary>
        public SoccerEntities2(EntityConnection connection) : base(connection, "SoccerEntities2")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Category> Categories
        {
            get
            {
                if ((_Categories == null))
                {
                    _Categories = base.CreateObjectSet<Category>("Categories");
                }
                return _Categories;
            }
        }
        private ObjectSet<Category> _Categories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Game> Games
        {
            get
            {
                if ((_Games == null))
                {
                    _Games = base.CreateObjectSet<Game>("Games");
                }
                return _Games;
            }
        }
        private ObjectSet<Game> _Games;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GameDay> GameDays
        {
            get
            {
                if ((_GameDays == null))
                {
                    _GameDays = base.CreateObjectSet<GameDay>("GameDays");
                }
                return _GameDays;
            }
        }
        private ObjectSet<GameDay> _GameDays;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GamePayment> GamePayments
        {
            get
            {
                if ((_GamePayments == null))
                {
                    _GamePayments = base.CreateObjectSet<GamePayment>("GamePayments");
                }
                return _GamePayments;
            }
        }
        private ObjectSet<GamePayment> _GamePayments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Player> Players
        {
            get
            {
                if ((_Players == null))
                {
                    _Players = base.CreateObjectSet<Player>("Players");
                }
                return _Players;
            }
        }
        private ObjectSet<Player> _Players;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PlayerStatic> PlayerStatics
        {
            get
            {
                if ((_PlayerStatics == null))
                {
                    _PlayerStatics = base.CreateObjectSet<PlayerStatic>("PlayerStatics");
                }
                return _PlayerStatics;
            }
        }
        private ObjectSet<PlayerStatic> _PlayerStatics;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RegistrationPayment> RegistrationPayments
        {
            get
            {
                if ((_RegistrationPayments == null))
                {
                    _RegistrationPayments = base.CreateObjectSet<RegistrationPayment>("RegistrationPayments");
                }
                return _RegistrationPayments;
            }
        }
        private ObjectSet<RegistrationPayment> _RegistrationPayments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Team> Teams
        {
            get
            {
                if ((_Teams == null))
                {
                    _Teams = base.CreateObjectSet<Team>("Teams");
                }
                return _Teams;
            }
        }
        private ObjectSet<Team> _Teams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Tournament> Tournaments
        {
            get
            {
                if ((_Tournaments == null))
                {
                    _Tournaments = base.CreateObjectSet<Tournament>("Tournaments");
                }
                return _Tournaments;
            }
        }
        private ObjectSet<Tournament> _Tournaments;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Categories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCategories(Category category)
        {
            base.AddObject("Categories", category);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Games EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGames(Game game)
        {
            base.AddObject("Games", game);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GameDays EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGameDays(GameDay gameDay)
        {
            base.AddObject("GameDays", gameDay);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GamePayments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGamePayments(GamePayment gamePayment)
        {
            base.AddObject("GamePayments", gamePayment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Players EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPlayers(Player player)
        {
            base.AddObject("Players", player);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PlayerStatics EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPlayerStatics(PlayerStatic playerStatic)
        {
            base.AddObject("PlayerStatics", playerStatic);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RegistrationPayments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRegistrationPayments(RegistrationPayment registrationPayment)
        {
            base.AddObject("RegistrationPayments", registrationPayment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Teams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTeams(Team team)
        {
            base.AddObject("Teams", team);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tournaments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTournaments(Tournament tournament)
        {
            base.AddObject("Tournaments", tournament);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SoccerModel", Name="Category")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Category : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Category object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Category CreateCategory(global::System.Int32 id, global::System.String name)
        {
            Category category = new Category();
            category.Id = id;
            category.Name = name;
            return category;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SoccerModel", "FK_CategoryID_Category", "Team")]
        public EntityCollection<Team> Teams
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Team>("SoccerModel.FK_CategoryID_Category", "Team");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Team>("SoccerModel.FK_CategoryID_Category", "Team", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SoccerModel", "FK_CategoryID_Category_2", "Tournament")]
        public EntityCollection<Tournament> Tournaments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Tournament>("SoccerModel.FK_CategoryID_Category_2", "Tournament");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Tournament>("SoccerModel.FK_CategoryID_Category_2", "Tournament", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SoccerModel", Name="Game")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Game : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Game object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="gameDayID">Initial value of the GameDayID property.</param>
        /// <param name="startTime">Initial value of the StartTime property.</param>
        /// <param name="team1ID">Initial value of the Team1ID property.</param>
        /// <param name="team2ID">Initial value of the Team2ID property.</param>
        public static Game CreateGame(global::System.Int32 id, global::System.Int32 gameDayID, global::System.DateTime startTime, global::System.Int32 team1ID, global::System.Int32 team2ID)
        {
            Game game = new Game();
            game.ID = id;
            game.GameDayID = gameDayID;
            game.StartTime = startTime;
            game.Team1ID = team1ID;
            game.Team2ID = team2ID;
            return game;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GameDayID
        {
            get
            {
                return _GameDayID;
            }
            set
            {
                OnGameDayIDChanging(value);
                ReportPropertyChanging("GameDayID");
                _GameDayID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GameDayID");
                OnGameDayIDChanged();
            }
        }
        private global::System.Int32 _GameDayID;
        partial void OnGameDayIDChanging(global::System.Int32 value);
        partial void OnGameDayIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartTime
        {
            get
            {
                return _StartTime;
            }
            set
            {
                OnStartTimeChanging(value);
                ReportPropertyChanging("StartTime");
                _StartTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartTime");
                OnStartTimeChanged();
            }
        }
        private global::System.DateTime _StartTime;
        partial void OnStartTimeChanging(global::System.DateTime value);
        partial void OnStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Team1ID
        {
            get
            {
                return _Team1ID;
            }
            set
            {
                OnTeam1IDChanging(value);
                ReportPropertyChanging("Team1ID");
                _Team1ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Team1ID");
                OnTeam1IDChanged();
            }
        }
        private global::System.Int32 _Team1ID;
        partial void OnTeam1IDChanging(global::System.Int32 value);
        partial void OnTeam1IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Team2ID
        {
            get
            {
                return _Team2ID;
            }
            set
            {
                OnTeam2IDChanging(value);
                ReportPropertyChanging("Team2ID");
                _Team2ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Team2ID");
                OnTeam2IDChanged();
            }
        }
        private global::System.Int32 _Team2ID;
        partial void OnTeam2IDChanging(global::System.Int32 value);
        partial void OnTeam2IDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SoccerModel", "FK_GameID_Game", "GamePayments")]
        public EntityCollection<GamePayment> GamePayments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GamePayment>("SoccerModel.FK_GameID_Game", "GamePayments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GamePayment>("SoccerModel.FK_GameID_Game", "GamePayments", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SoccerModel", "FK_IDGameDay_GameDay", "GameDay")]
        public GameDay GameDay
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GameDay>("SoccerModel.FK_IDGameDay_GameDay", "GameDay").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GameDay>("SoccerModel.FK_IDGameDay_GameDay", "GameDay").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GameDay> GameDayReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GameDay>("SoccerModel.FK_IDGameDay_GameDay", "GameDay");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GameDay>("SoccerModel.FK_IDGameDay_GameDay", "GameDay", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SoccerModel", "FK_Team1_Team", "Team")]
        public Team Team
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("SoccerModel.FK_Team1_Team", "Team").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("SoccerModel.FK_Team1_Team", "Team").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Team> TeamReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("SoccerModel.FK_Team1_Team", "Team");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Team>("SoccerModel.FK_Team1_Team", "Team", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SoccerModel", "FK_Team2_Team", "Team")]
        public Team Team1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("SoccerModel.FK_Team2_Team", "Team").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("SoccerModel.FK_Team2_Team", "Team").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Team> Team1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("SoccerModel.FK_Team2_Team", "Team");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Team>("SoccerModel.FK_Team2_Team", "Team", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SoccerModel", Name="GameDay")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GameDay : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GameDay object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="tournamentID">Initial value of the TournamentID property.</param>
        /// <param name="gameDate">Initial value of the GameDate property.</param>
        /// <param name="gameAmount">Initial value of the GameAmount property.</param>
        public static GameDay CreateGameDay(global::System.Int32 id, global::System.Int32 tournamentID, global::System.DateTime gameDate, global::System.Decimal gameAmount)
        {
            GameDay gameDay = new GameDay();
            gameDay.ID = id;
            gameDay.TournamentID = tournamentID;
            gameDay.GameDate = gameDate;
            gameDay.GameAmount = gameAmount;
            return gameDay;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TournamentID
        {
            get
            {
                return _TournamentID;
            }
            set
            {
                OnTournamentIDChanging(value);
                ReportPropertyChanging("TournamentID");
                _TournamentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TournamentID");
                OnTournamentIDChanged();
            }
        }
        private global::System.Int32 _TournamentID;
        partial void OnTournamentIDChanging(global::System.Int32 value);
        partial void OnTournamentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime GameDate
        {
            get
            {
                return _GameDate;
            }
            set
            {
                OnGameDateChanging(value);
                ReportPropertyChanging("GameDate");
                _GameDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GameDate");
                OnGameDateChanged();
            }
        }
        private global::System.DateTime _GameDate;
        partial void OnGameDateChanging(global::System.DateTime value);
        partial void OnGameDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal GameAmount
        {
            get
            {
                return _GameAmount;
            }
            set
            {
                OnGameAmountChanging(value);
                ReportPropertyChanging("GameAmount");
                _GameAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GameAmount");
                OnGameAmountChanged();
            }
        }
        private global::System.Decimal _GameAmount;
        partial void OnGameAmountChanging(global::System.Decimal value);
        partial void OnGameAmountChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SoccerModel", "FK_IDGameDay_GameDay", "Game")]
        public EntityCollection<Game> Games
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Game>("SoccerModel.FK_IDGameDay_GameDay", "Game");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Game>("SoccerModel.FK_IDGameDay_GameDay", "Game", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SoccerModel", "FK_GameDayID_GameDay", "PlayerStatics")]
        public EntityCollection<PlayerStatic> PlayerStatics
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PlayerStatic>("SoccerModel.FK_GameDayID_GameDay", "PlayerStatics");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PlayerStatic>("SoccerModel.FK_GameDayID_GameDay", "PlayerStatics", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SoccerModel", "FK_IDTournament_Tournament", "Tournament")]
        public Tournament Tournament
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tournament>("SoccerModel.FK_IDTournament_Tournament", "Tournament").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tournament>("SoccerModel.FK_IDTournament_Tournament", "Tournament").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tournament> TournamentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tournament>("SoccerModel.FK_IDTournament_Tournament", "Tournament");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tournament>("SoccerModel.FK_IDTournament_Tournament", "Tournament", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SoccerModel", Name="GamePayment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GamePayment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GamePayment object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="gameID">Initial value of the GameID property.</param>
        /// <param name="teamID">Initial value of the TeamID property.</param>
        /// <param name="paidDate">Initial value of the PaidDate property.</param>
        public static GamePayment CreateGamePayment(global::System.Int32 id, global::System.Int32 gameID, global::System.Int32 teamID, global::System.DateTime paidDate)
        {
            GamePayment gamePayment = new GamePayment();
            gamePayment.ID = id;
            gamePayment.GameID = gameID;
            gamePayment.TeamID = teamID;
            gamePayment.PaidDate = paidDate;
            return gamePayment;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GameID
        {
            get
            {
                return _GameID;
            }
            set
            {
                OnGameIDChanging(value);
                ReportPropertyChanging("GameID");
                _GameID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GameID");
                OnGameIDChanged();
            }
        }
        private global::System.Int32 _GameID;
        partial void OnGameIDChanging(global::System.Int32 value);
        partial void OnGameIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TeamID
        {
            get
            {
                return _TeamID;
            }
            set
            {
                OnTeamIDChanging(value);
                ReportPropertyChanging("TeamID");
                _TeamID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TeamID");
                OnTeamIDChanged();
            }
        }
        private global::System.Int32 _TeamID;
        partial void OnTeamIDChanging(global::System.Int32 value);
        partial void OnTeamIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PaidDate
        {
            get
            {
                return _PaidDate;
            }
            set
            {
                OnPaidDateChanging(value);
                ReportPropertyChanging("PaidDate");
                _PaidDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaidDate");
                OnPaidDateChanged();
            }
        }
        private global::System.DateTime _PaidDate;
        partial void OnPaidDateChanging(global::System.DateTime value);
        partial void OnPaidDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SoccerModel", "FK_GameID_Game", "Game")]
        public Game Game
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Game>("SoccerModel.FK_GameID_Game", "Game").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Game>("SoccerModel.FK_GameID_Game", "Game").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Game> GameReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Game>("SoccerModel.FK_GameID_Game", "Game");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Game>("SoccerModel.FK_GameID_Game", "Game", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SoccerModel", "FK_TeamID_Team_3", "Team")]
        public Team Team
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("SoccerModel.FK_TeamID_Team_3", "Team").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("SoccerModel.FK_TeamID_Team_3", "Team").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Team> TeamReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("SoccerModel.FK_TeamID_Team_3", "Team");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Team>("SoccerModel.FK_TeamID_Team_3", "Team", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SoccerModel", Name="Player")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Player : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Player object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="dni">Initial value of the Dni property.</param>
        /// <param name="mail">Initial value of the Mail property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        /// <param name="teamID">Initial value of the TeamID property.</param>
        public static Player CreatePlayer(global::System.Int32 id, global::System.Int32 dni, global::System.String mail, global::System.String name, global::System.String address, global::System.Int32 teamID)
        {
            Player player = new Player();
            player.ID = id;
            player.Dni = dni;
            player.Mail = mail;
            player.Name = name;
            player.Address = address;
            player.TeamID = teamID;
            return player;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Dni
        {
            get
            {
                return _Dni;
            }
            set
            {
                OnDniChanging(value);
                ReportPropertyChanging("Dni");
                _Dni = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Dni");
                OnDniChanged();
            }
        }
        private global::System.Int32 _Dni;
        partial void OnDniChanging(global::System.Int32 value);
        partial void OnDniChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Mail
        {
            get
            {
                return _Mail;
            }
            set
            {
                OnMailChanging(value);
                ReportPropertyChanging("Mail");
                _Mail = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Mail");
                OnMailChanged();
            }
        }
        private global::System.String _Mail;
        partial void OnMailChanging(global::System.String value);
        partial void OnMailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TeamID
        {
            get
            {
                return _TeamID;
            }
            set
            {
                OnTeamIDChanging(value);
                ReportPropertyChanging("TeamID");
                _TeamID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TeamID");
                OnTeamIDChanged();
            }
        }
        private global::System.Int32 _TeamID;
        partial void OnTeamIDChanging(global::System.Int32 value);
        partial void OnTeamIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SoccerModel", "FK_PlayerID_Player", "PlayerStatics")]
        public EntityCollection<PlayerStatic> PlayerStatics
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PlayerStatic>("SoccerModel.FK_PlayerID_Player", "PlayerStatics");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PlayerStatic>("SoccerModel.FK_PlayerID_Player", "PlayerStatics", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SoccerModel", "FK_TeamID_Team", "Team")]
        public Team Team
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("SoccerModel.FK_TeamID_Team", "Team").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("SoccerModel.FK_TeamID_Team", "Team").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Team> TeamReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("SoccerModel.FK_TeamID_Team", "Team");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Team>("SoccerModel.FK_TeamID_Team", "Team", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SoccerModel", Name="PlayerStatic")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PlayerStatic : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PlayerStatic object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="playerID">Initial value of the PlayerID property.</param>
        /// <param name="gameDayID">Initial value of the GameDayID property.</param>
        /// <param name="redCard">Initial value of the RedCard property.</param>
        /// <param name="yellowCards">Initial value of the YellowCards property.</param>
        /// <param name="goals">Initial value of the Goals property.</param>
        public static PlayerStatic CreatePlayerStatic(global::System.Int32 id, global::System.Int32 playerID, global::System.Int32 gameDayID, global::System.Int32 redCard, global::System.Int32 yellowCards, global::System.Int32 goals)
        {
            PlayerStatic playerStatic = new PlayerStatic();
            playerStatic.ID = id;
            playerStatic.PlayerID = playerID;
            playerStatic.GameDayID = gameDayID;
            playerStatic.RedCard = redCard;
            playerStatic.YellowCards = yellowCards;
            playerStatic.Goals = goals;
            return playerStatic;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PlayerID
        {
            get
            {
                return _PlayerID;
            }
            set
            {
                OnPlayerIDChanging(value);
                ReportPropertyChanging("PlayerID");
                _PlayerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PlayerID");
                OnPlayerIDChanged();
            }
        }
        private global::System.Int32 _PlayerID;
        partial void OnPlayerIDChanging(global::System.Int32 value);
        partial void OnPlayerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GameDayID
        {
            get
            {
                return _GameDayID;
            }
            set
            {
                OnGameDayIDChanging(value);
                ReportPropertyChanging("GameDayID");
                _GameDayID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GameDayID");
                OnGameDayIDChanged();
            }
        }
        private global::System.Int32 _GameDayID;
        partial void OnGameDayIDChanging(global::System.Int32 value);
        partial void OnGameDayIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RedCard
        {
            get
            {
                return _RedCard;
            }
            set
            {
                OnRedCardChanging(value);
                ReportPropertyChanging("RedCard");
                _RedCard = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RedCard");
                OnRedCardChanged();
            }
        }
        private global::System.Int32 _RedCard;
        partial void OnRedCardChanging(global::System.Int32 value);
        partial void OnRedCardChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 YellowCards
        {
            get
            {
                return _YellowCards;
            }
            set
            {
                OnYellowCardsChanging(value);
                ReportPropertyChanging("YellowCards");
                _YellowCards = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YellowCards");
                OnYellowCardsChanged();
            }
        }
        private global::System.Int32 _YellowCards;
        partial void OnYellowCardsChanging(global::System.Int32 value);
        partial void OnYellowCardsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Goals
        {
            get
            {
                return _Goals;
            }
            set
            {
                OnGoalsChanging(value);
                ReportPropertyChanging("Goals");
                _Goals = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Goals");
                OnGoalsChanged();
            }
        }
        private global::System.Int32 _Goals;
        partial void OnGoalsChanging(global::System.Int32 value);
        partial void OnGoalsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SoccerModel", "FK_GameDayID_GameDay", "GameDay")]
        public GameDay GameDay
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GameDay>("SoccerModel.FK_GameDayID_GameDay", "GameDay").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GameDay>("SoccerModel.FK_GameDayID_GameDay", "GameDay").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GameDay> GameDayReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GameDay>("SoccerModel.FK_GameDayID_GameDay", "GameDay");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GameDay>("SoccerModel.FK_GameDayID_GameDay", "GameDay", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SoccerModel", "FK_PlayerID_Player", "Player")]
        public Player Player
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Player>("SoccerModel.FK_PlayerID_Player", "Player").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Player>("SoccerModel.FK_PlayerID_Player", "Player").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Player> PlayerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Player>("SoccerModel.FK_PlayerID_Player", "Player");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Player>("SoccerModel.FK_PlayerID_Player", "Player", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SoccerModel", Name="RegistrationPayment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RegistrationPayment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RegistrationPayment object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="tournamentID">Initial value of the TournamentID property.</param>
        /// <param name="teamID">Initial value of the TeamID property.</param>
        /// <param name="paidDate">Initial value of the PaidDate property.</param>
        public static RegistrationPayment CreateRegistrationPayment(global::System.Int32 id, global::System.Int32 tournamentID, global::System.Int32 teamID, global::System.DateTime paidDate)
        {
            RegistrationPayment registrationPayment = new RegistrationPayment();
            registrationPayment.ID = id;
            registrationPayment.TournamentID = tournamentID;
            registrationPayment.TeamID = teamID;
            registrationPayment.PaidDate = paidDate;
            return registrationPayment;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TournamentID
        {
            get
            {
                return _TournamentID;
            }
            set
            {
                OnTournamentIDChanging(value);
                ReportPropertyChanging("TournamentID");
                _TournamentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TournamentID");
                OnTournamentIDChanged();
            }
        }
        private global::System.Int32 _TournamentID;
        partial void OnTournamentIDChanging(global::System.Int32 value);
        partial void OnTournamentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TeamID
        {
            get
            {
                return _TeamID;
            }
            set
            {
                OnTeamIDChanging(value);
                ReportPropertyChanging("TeamID");
                _TeamID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TeamID");
                OnTeamIDChanged();
            }
        }
        private global::System.Int32 _TeamID;
        partial void OnTeamIDChanging(global::System.Int32 value);
        partial void OnTeamIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PaidDate
        {
            get
            {
                return _PaidDate;
            }
            set
            {
                OnPaidDateChanging(value);
                ReportPropertyChanging("PaidDate");
                _PaidDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaidDate");
                OnPaidDateChanged();
            }
        }
        private global::System.DateTime _PaidDate;
        partial void OnPaidDateChanging(global::System.DateTime value);
        partial void OnPaidDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SoccerModel", "FK_TeamID_Team_2", "Team")]
        public Team Team
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("SoccerModel.FK_TeamID_Team_2", "Team").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("SoccerModel.FK_TeamID_Team_2", "Team").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Team> TeamReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("SoccerModel.FK_TeamID_Team_2", "Team");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Team>("SoccerModel.FK_TeamID_Team_2", "Team", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SoccerModel", "FK_TournamentID_Tournament", "Tournament")]
        public Tournament Tournament
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tournament>("SoccerModel.FK_TournamentID_Tournament", "Tournament").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tournament>("SoccerModel.FK_TournamentID_Tournament", "Tournament").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tournament> TournamentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tournament>("SoccerModel.FK_TournamentID_Tournament", "Tournament");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tournament>("SoccerModel.FK_TournamentID_Tournament", "Tournament", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SoccerModel", Name="Team")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Team : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Team object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="categoryID">Initial value of the CategoryID property.</param>
        public static Team CreateTeam(global::System.Int32 id, global::System.String name, global::System.Int32 categoryID)
        {
            Team team = new Team();
            team.ID = id;
            team.Name = name;
            team.CategoryID = categoryID;
            return team;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryID
        {
            get
            {
                return _CategoryID;
            }
            set
            {
                OnCategoryIDChanging(value);
                ReportPropertyChanging("CategoryID");
                _CategoryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryID");
                OnCategoryIDChanged();
            }
        }
        private global::System.Int32 _CategoryID;
        partial void OnCategoryIDChanging(global::System.Int32 value);
        partial void OnCategoryIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SoccerModel", "FK_CategoryID_Category", "Category")]
        public Category Category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("SoccerModel.FK_CategoryID_Category", "Category").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("SoccerModel.FK_CategoryID_Category", "Category").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Category> CategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("SoccerModel.FK_CategoryID_Category", "Category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Category>("SoccerModel.FK_CategoryID_Category", "Category", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SoccerModel", "FK_Team1_Team", "Game")]
        public EntityCollection<Game> Games
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Game>("SoccerModel.FK_Team1_Team", "Game");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Game>("SoccerModel.FK_Team1_Team", "Game", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SoccerModel", "FK_Team2_Team", "Game")]
        public EntityCollection<Game> Games1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Game>("SoccerModel.FK_Team2_Team", "Game");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Game>("SoccerModel.FK_Team2_Team", "Game", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SoccerModel", "FK_TeamID_Team_3", "GamePayments")]
        public EntityCollection<GamePayment> GamePayments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GamePayment>("SoccerModel.FK_TeamID_Team_3", "GamePayments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GamePayment>("SoccerModel.FK_TeamID_Team_3", "GamePayments", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SoccerModel", "FK_TeamID_Team", "Player")]
        public EntityCollection<Player> Players
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Player>("SoccerModel.FK_TeamID_Team", "Player");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Player>("SoccerModel.FK_TeamID_Team", "Player", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SoccerModel", "FK_TeamID_Team_2", "RegistrationPayments")]
        public EntityCollection<RegistrationPayment> RegistrationPayments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RegistrationPayment>("SoccerModel.FK_TeamID_Team_2", "RegistrationPayments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RegistrationPayment>("SoccerModel.FK_TeamID_Team_2", "RegistrationPayments", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SoccerModel", Name="Tournament")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tournament : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Tournament object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="categoryID">Initial value of the CategoryID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="startDate">Initial value of the StartDate property.</param>
        /// <param name="registrationAmount">Initial value of the RegistrationAmount property.</param>
        public static Tournament CreateTournament(global::System.Int32 id, global::System.Int32 categoryID, global::System.String name, global::System.DateTime startDate, global::System.Decimal registrationAmount)
        {
            Tournament tournament = new Tournament();
            tournament.ID = id;
            tournament.CategoryID = categoryID;
            tournament.Name = name;
            tournament.StartDate = startDate;
            tournament.RegistrationAmount = registrationAmount;
            return tournament;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryID
        {
            get
            {
                return _CategoryID;
            }
            set
            {
                OnCategoryIDChanging(value);
                ReportPropertyChanging("CategoryID");
                _CategoryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryID");
                OnCategoryIDChanged();
            }
        }
        private global::System.Int32 _CategoryID;
        partial void OnCategoryIDChanging(global::System.Int32 value);
        partial void OnCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private global::System.DateTime _StartDate;
        partial void OnStartDateChanging(global::System.DateTime value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal RegistrationAmount
        {
            get
            {
                return _RegistrationAmount;
            }
            set
            {
                OnRegistrationAmountChanging(value);
                ReportPropertyChanging("RegistrationAmount");
                _RegistrationAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegistrationAmount");
                OnRegistrationAmountChanged();
            }
        }
        private global::System.Decimal _RegistrationAmount;
        partial void OnRegistrationAmountChanging(global::System.Decimal value);
        partial void OnRegistrationAmountChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SoccerModel", "FK_CategoryID_Category_2", "Category")]
        public Category Category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("SoccerModel.FK_CategoryID_Category_2", "Category").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("SoccerModel.FK_CategoryID_Category_2", "Category").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Category> CategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("SoccerModel.FK_CategoryID_Category_2", "Category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Category>("SoccerModel.FK_CategoryID_Category_2", "Category", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SoccerModel", "FK_IDTournament_Tournament", "GameDay")]
        public EntityCollection<GameDay> GameDays
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GameDay>("SoccerModel.FK_IDTournament_Tournament", "GameDay");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GameDay>("SoccerModel.FK_IDTournament_Tournament", "GameDay", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SoccerModel", "FK_TournamentID_Tournament", "RegistrationPayments")]
        public EntityCollection<RegistrationPayment> RegistrationPayments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RegistrationPayment>("SoccerModel.FK_TournamentID_Tournament", "RegistrationPayments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RegistrationPayment>("SoccerModel.FK_TournamentID_Tournament", "RegistrationPayments", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
